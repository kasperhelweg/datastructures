%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/push_med_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Thu May 29 17:42:07 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/push_med_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 29 17:42:07 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
630 280 M
63 0 V
6254 0 R
-63 0 V
546 280 M
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 739 M
63 0 V
6254 0 R
-63 0 V
546 739 M
( 0.02) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 1198 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.04) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 1657 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.06) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 2116 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.08) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 2576 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.1) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 3035 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.12) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 3494 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.14) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 3953 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.16) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 4412 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.18) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 4871 M
63 0 V
6254 0 R
-63 0 V
-6338 0 R
( 0.2) Rshow
1.000 UL
LTb
LCb setrgbcolor
630 280 M
0 63 V
0 4528 R
0 -63 V
630 140 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
1105 280 M
0 31 V
0 4560 R
0 -31 V
1734 280 M
0 31 V
0 4560 R
0 -31 V
2056 280 M
0 31 V
0 4560 R
0 -31 V
2209 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2685 280 M
0 31 V
0 4560 R
0 -31 V
3313 280 M
0 31 V
0 4560 R
0 -31 V
3635 280 M
0 31 V
0 4560 R
0 -31 V
3789 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4264 280 M
0 31 V
0 4560 R
0 -31 V
4892 280 M
0 31 V
0 4560 R
0 -31 V
5215 280 M
0 31 V
0 4560 R
0 -31 V
5368 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5843 280 M
0 31 V
0 4560 R
0 -31 V
6472 280 M
0 31 V
0 4560 R
0 -31 V
6794 280 M
0 31 V
0 4560 R
0 -31 V
6947 280 M
0 63 V
0 4528 R
0 -63 V
0 -4668 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
630 4871 N
630 280 L
6317 0 V
0 4591 V
-6317 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.500 UP
1.000 UL
LT0
0.86 0.08 0.24 C LCb setrgbcolor
6328 4738 M
(Magic Binary Queue) Rshow
LT0
0.86 0.08 0.24 C 6412 4738 M
367 0 V
630 4504 M
91 -164 V
92 -243 V
91 -307 V
92 -263 V
91 -217 V
92 -213 V
91 -180 V
91 -164 V
92 -219 V
92 -130 V
91 -107 V
92 -159 V
91 60 V
92 -250 V
91 397 V
92 -639 V
91 1241 V
92 -1384 V
91 4 V
92 -7 V
92 3 V
91 5 V
92 51 V
91 1509 V
92 -1552 V
91 7 V
92 24 V
92 152 V
91 -147 V
92 51 V
91 81 V
92 190 V
91 255 V
92 142 V
630 4504 TriUF
721 4340 TriUF
813 4097 TriUF
904 3790 TriUF
996 3527 TriUF
1087 3310 TriUF
1179 3097 TriUF
1270 2917 TriUF
1361 2753 TriUF
1453 2534 TriUF
1545 2404 TriUF
1636 2297 TriUF
1728 2138 TriUF
1819 2198 TriUF
1911 1948 TriUF
2002 2345 TriUF
2094 1706 TriUF
2185 2947 TriUF
2277 1563 TriUF
2368 1567 TriUF
2460 1560 TriUF
2552 1563 TriUF
2643 1568 TriUF
2735 1619 TriUF
2826 3128 TriUF
2918 1576 TriUF
3009 1583 TriUF
3101 1607 TriUF
3193 1759 TriUF
3284 1612 TriUF
3376 1663 TriUF
3467 1744 TriUF
3559 1934 TriUF
3650 2189 TriUF
3742 2331 TriUF
6595 4738 TriUF
% End plot #1
% Begin plot #2
0.500 UP
1.000 UL
LT1
0.00 0.50 0.00 C LCb setrgbcolor
6328 4598 M
(Regular Binary Queue) Rshow
LT1
0.00 0.50 0.00 C 6412 4598 M
367 0 V
630 2920 M
91 -27 V
92 8 V
91 -4 V
92 198 V
91 -33 V
92 107 V
91 -279 V
91 6 V
92 -2 V
92 -6 V
91 -3 V
92 8 V
91 2 V
92 -11 V
91 7 V
92 -9 V
91 13 V
92 -5 V
91 4 V
92 1 V
92 -6 V
91 9 V
92 8 V
91 -17 V
92 16 V
91 -14 V
92 35 V
92 -12 V
91 37 V
92 36 V
91 105 V
92 114 V
91 154 V
92 169 V
630 2920 Box
721 2893 Box
813 2901 Box
904 2897 Box
996 3095 Box
1087 3062 Box
1179 3169 Box
1270 2890 Box
1361 2896 Box
1453 2894 Box
1545 2888 Box
1636 2885 Box
1728 2893 Box
1819 2895 Box
1911 2884 Box
2002 2891 Box
2094 2882 Box
2185 2895 Box
2277 2890 Box
2368 2894 Box
2460 2895 Box
2552 2889 Box
2643 2898 Box
2735 2906 Box
2826 2889 Box
2918 2905 Box
3009 2891 Box
3101 2926 Box
3193 2914 Box
3284 2951 Box
3376 2987 Box
3467 3092 Box
3559 3206 Box
3650 3360 Box
3742 3529 Box
6595 4598 Box
% End plot #2
% Begin plot #3
0.500 UP
1.000 UL
LT2
0.50 0.50 0.00 C LCb setrgbcolor
6328 4458 M
(Lazy Binary Queue) Rshow
LT2
0.50 0.50 0.00 C 6412 4458 M
367 0 V
630 762 M
91 -20 V
92 13 V
91 2 V
92 412 V
91 -417 V
92 13 V
91 -15 V
91 12 V
92 -19 V
92 21 V
91 -29 V
92 4 V
91 36 V
92 -34 V
91 2 V
92 2 V
91 13 V
92 61 V
91 -44 V
92 31 V
92 137 V
91 -100 V
92 139 V
91 236 V
92 36 V
91 -55 V
92 210 V
92 12 V
91 144 V
92 0 V
91 -37 V
92 77 V
91 79 V
92 8 V
630 762 TriU
721 742 TriU
813 755 TriU
904 757 TriU
996 1169 TriU
1087 752 TriU
1179 765 TriU
1270 750 TriU
1361 762 TriU
1453 743 TriU
1545 764 TriU
1636 735 TriU
1728 739 TriU
1819 775 TriU
1911 741 TriU
2002 743 TriU
2094 745 TriU
2185 758 TriU
2277 819 TriU
2368 775 TriU
2460 806 TriU
2552 943 TriU
2643 843 TriU
2735 982 TriU
2826 1218 TriU
2918 1254 TriU
3009 1199 TriU
3101 1409 TriU
3193 1421 TriU
3284 1565 TriU
3376 1565 TriU
3467 1528 TriU
3559 1605 TriU
3650 1684 TriU
3742 1692 TriU
6595 4458 TriU
% End plot #3
% Begin plot #4
0.500 UP
1.000 UL
LT3
0.54 0.17 0.89 C LCb setrgbcolor
6328 4318 M
(Eager Binary Queue) Rshow
LT3
0.54 0.17 0.89 C 6412 4318 M
367 0 V
630 1474 M
91 52 V
92 -15 V
91 93 V
92 -85 V
91 152 V
92 -60 V
91 5 V
91 -72 V
92 -6 V
92 0 V
91 7 V
92 0 V
91 4 V
92 5 V
91 -1 V
92 23 V
91 7 V
92 -26 V
91 13 V
92 -3 V
92 19 V
91 60 V
92 -70 V
91 33 V
92 -25 V
91 -9 V
92 32 V
92 45 V
91 7 V
92 72 V
91 115 V
92 210 V
91 41 V
92 184 V
630 1474 CircleF
721 1526 CircleF
813 1511 CircleF
904 1604 CircleF
996 1519 CircleF
1087 1671 CircleF
1179 1611 CircleF
1270 1616 CircleF
1361 1544 CircleF
1453 1538 CircleF
1545 1538 CircleF
1636 1545 CircleF
1728 1545 CircleF
1819 1549 CircleF
1911 1554 CircleF
2002 1553 CircleF
2094 1576 CircleF
2185 1583 CircleF
2277 1557 CircleF
2368 1570 CircleF
2460 1567 CircleF
2552 1586 CircleF
2643 1646 CircleF
2735 1576 CircleF
2826 1609 CircleF
2918 1584 CircleF
3009 1575 CircleF
3101 1607 CircleF
3193 1652 CircleF
3284 1659 CircleF
3376 1731 CircleF
3467 1846 CircleF
3559 2056 CircleF
3650 2097 CircleF
3742 2281 CircleF
6595 4318 CircleF
% End plot #4
% Begin plot #5
0.500 UP
1.000 UL
LT4
0.00 0.55 0.55 C LCb setrgbcolor
6328 4178 M
(Boost Binomial Queue) Rshow
LT4
0.00 0.55 0.55 C 6412 4178 M
367 0 V
630 1015 M
91 -11 V
92 -91 V
91 29 V
92 25 V
91 -39 V
92 2 V
91 9 V
91 -3 V
92 1 V
92 -4 V
91 3 V
92 34 V
91 44 V
92 54 V
91 -139 V
92 -11 V
91 13 V
92 4 V
91 -14 V
92 -6 V
92 2 V
91 14 V
92 -16 V
91 -1 V
92 1 V
91 4 V
92 -2 V
92 39 V
91 -11 V
92 31 V
91 15 V
92 53 V
91 61 V
92 -12 V
630 1015 Circle
721 1004 Circle
813 913 Circle
904 942 Circle
996 967 Circle
1087 928 Circle
1179 930 Circle
1270 939 Circle
1361 936 Circle
1453 937 Circle
1545 933 Circle
1636 936 Circle
1728 970 Circle
1819 1014 Circle
1911 1068 Circle
2002 929 Circle
2094 918 Circle
2185 931 Circle
2277 935 Circle
2368 921 Circle
2460 915 Circle
2552 917 Circle
2643 931 Circle
2735 915 Circle
2826 914 Circle
2918 915 Circle
3009 919 Circle
3101 917 Circle
3193 956 Circle
3284 945 Circle
3376 976 Circle
3467 991 Circle
3559 1044 Circle
3650 1105 Circle
3742 1093 Circle
6595 4178 Circle
% End plot #5
% Begin plot #6
0.500 UP
1.000 UL
LT5
0.85 0.65 0.13 C LCb setrgbcolor
6328 4038 M
(Boost Fibonacci Heap) Rshow
LT5
0.85 0.65 0.13 C 6412 4038 M
367 0 V
630 762 M
91 -20 V
92 13 V
91 -44 V
92 -40 V
91 10 V
92 -9 V
91 5 V
91 -2 V
92 27 V
92 -29 V
91 -1 V
92 30 V
91 -13 V
92 49 V
91 1 V
92 -68 V
91 4 V
92 -2 V
91 0 V
92 0 V
92 -1 V
91 1 V
92 3 V
91 -2 V
92 -1 V
91 1 V
92 3 V
92 25 V
91 -9 V
92 -6 V
91 5 V
92 4 V
91 11 V
92 -1 V
630 762 BoxF
721 742 BoxF
813 755 BoxF
904 711 BoxF
996 671 BoxF
1087 681 BoxF
1179 672 BoxF
1270 677 BoxF
1361 675 BoxF
1453 702 BoxF
1545 673 BoxF
1636 672 BoxF
1728 702 BoxF
1819 689 BoxF
1911 738 BoxF
2002 739 BoxF
2094 671 BoxF
2185 675 BoxF
2277 673 BoxF
2368 673 BoxF
2460 673 BoxF
2552 672 BoxF
2643 673 BoxF
2735 676 BoxF
2826 674 BoxF
2918 673 BoxF
3009 674 BoxF
3101 677 BoxF
3193 702 BoxF
3284 693 BoxF
3376 687 BoxF
3467 692 BoxF
3559 696 BoxF
3650 707 BoxF
3742 706 BoxF
6595 4038 BoxF
% End plot #6
1.000 UL
LTb
LCb setrgbcolor
630 4871 N
630 280 L
6317 0 V
0 4591 V
-6317 0 V
Z stroke
0.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
