%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/push_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Fri Jun 13 09:29:03 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/push_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun 13 09:29:03 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
854 448 M
63 0 V
6030 0 R
-63 0 V
770 448 M
( 0.001) Rshow
1.000 UL
LTb
LCb setrgbcolor
854 892 M
31 0 V
6062 0 R
-31 0 V
854 1151 M
31 0 V
6062 0 R
-31 0 V
854 1336 M
31 0 V
6062 0 R
-31 0 V
854 1479 M
31 0 V
6062 0 R
-31 0 V
854 1595 M
31 0 V
6062 0 R
-31 0 V
854 1694 M
31 0 V
6062 0 R
-31 0 V
854 1779 M
31 0 V
6062 0 R
-31 0 V
854 1855 M
31 0 V
6062 0 R
-31 0 V
854 1922 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.01) Rshow
1.000 UL
LTb
LCb setrgbcolor
854 2366 M
31 0 V
6062 0 R
-31 0 V
854 2626 M
31 0 V
6062 0 R
-31 0 V
854 2810 M
31 0 V
6062 0 R
-31 0 V
854 2953 M
31 0 V
6062 0 R
-31 0 V
854 3070 M
31 0 V
6062 0 R
-31 0 V
854 3168 M
31 0 V
6062 0 R
-31 0 V
854 3254 M
31 0 V
6062 0 R
-31 0 V
854 3329 M
31 0 V
6062 0 R
-31 0 V
854 3397 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.1) Rshow
1.000 UL
LTb
LCb setrgbcolor
854 3840 M
31 0 V
6062 0 R
-31 0 V
854 4100 M
31 0 V
6062 0 R
-31 0 V
854 4284 M
31 0 V
6062 0 R
-31 0 V
854 4427 M
31 0 V
6062 0 R
-31 0 V
854 4544 M
31 0 V
6062 0 R
-31 0 V
854 4643 M
31 0 V
6062 0 R
-31 0 V
854 4728 M
31 0 V
6062 0 R
-31 0 V
854 4804 M
31 0 V
6062 0 R
-31 0 V
854 4871 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 1) Rshow
1.000 UL
LTb
LCb setrgbcolor
854 448 M
0 63 V
0 4360 R
0 -63 V
854 308 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
1465 448 M
0 31 V
0 4392 R
0 -31 V
1823 448 M
0 31 V
0 4392 R
0 -31 V
2077 448 M
0 31 V
0 4392 R
0 -31 V
2274 448 M
0 31 V
0 4392 R
0 -31 V
2434 448 M
0 31 V
0 4392 R
0 -31 V
2570 448 M
0 31 V
0 4392 R
0 -31 V
2688 448 M
0 31 V
0 4392 R
0 -31 V
2792 448 M
0 31 V
0 4392 R
0 -31 V
2885 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
3496 448 M
0 31 V
0 4392 R
0 -31 V
3854 448 M
0 31 V
0 4392 R
0 -31 V
4108 448 M
0 31 V
0 4392 R
0 -31 V
4305 448 M
0 31 V
0 4392 R
0 -31 V
4465 448 M
0 31 V
0 4392 R
0 -31 V
4601 448 M
0 31 V
0 4392 R
0 -31 V
4719 448 M
0 31 V
0 4392 R
0 -31 V
4823 448 M
0 31 V
0 4392 R
0 -31 V
4916 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
5527 448 M
0 31 V
0 4392 R
0 -31 V
5885 448 M
0 31 V
0 4392 R
0 -31 V
6139 448 M
0 31 V
0 4392 R
0 -31 V
6336 448 M
0 31 V
0 4392 R
0 -31 V
6496 448 M
0 31 V
0 4392 R
0 -31 V
6632 448 M
0 31 V
0 4392 R
0 -31 V
6750 448 M
0 31 V
0 4392 R
0 -31 V
6854 448 M
0 31 V
0 4392 R
0 -31 V
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
854 4871 N
854 448 L
6093 0 V
0 4423 V
-6093 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(time in micro-seconds per. element\( log-scale \)) Cshow
grestore
LTb
LCb setrgbcolor
3900 98 M
(number of elements\( log-scale \)) Cshow
LTb
0.700 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.700 UP
1.000 UL
LT0
0.00 0.50 0.00 C LCb setrgbcolor
6315 1281 M
(Regular Binary Queue) Rshow
LT0
0.00 0.50 0.00 C 6399 1281 M
380 0 V
854 3558 M
320 -3 V
321 6 V
321 3 V
321 3 V
320 -3 V
321 0 V
321 -1 V
320 7 V
321 39 V
321 64 V
321 44 V
320 45 V
321 14 V
321 8 V
320 15 V
321 -21 V
321 6 V
320 -4 V
321 -20 V
854 3558 Box
1174 3555 Box
1495 3561 Box
1816 3564 Box
2137 3567 Box
2457 3564 Box
2778 3564 Box
3099 3563 Box
3419 3570 Box
3740 3609 Box
4061 3673 Box
4382 3717 Box
4702 3762 Box
5023 3776 Box
5344 3784 Box
5664 3799 Box
5985 3778 Box
6306 3784 Box
6626 3780 Box
6947 3760 Box
6589 1281 Box
% End plot #1
% Begin plot #2
0.700 UP
1.000 UL
LT1
0.86 0.08 0.24 C LCb setrgbcolor
6315 1141 M
(Magic Binary Queue) Rshow
LT1
0.86 0.08 0.24 C 6399 1141 M
380 0 V
854 2906 M
320 1 V
321 6 V
321 0 V
321 3 V
320 11 V
321 7 V
321 6 V
320 1 V
321 2 V
321 2 V
321 13 V
320 148 V
321 221 V
321 88 V
320 50 V
321 38 V
321 30 V
320 14 V
321 4 V
854 2906 TriUF
1174 2907 TriUF
1495 2913 TriUF
1816 2913 TriUF
2137 2916 TriUF
2457 2927 TriUF
2778 2934 TriUF
3099 2940 TriUF
3419 2941 TriUF
3740 2943 TriUF
4061 2945 TriUF
4382 2958 TriUF
4702 3106 TriUF
5023 3327 TriUF
5344 3415 TriUF
5664 3465 TriUF
5985 3503 TriUF
6306 3533 TriUF
6626 3547 TriUF
6947 3551 TriUF
6589 1141 TriUF
% End plot #2
% Begin plot #3
0.700 UP
1.000 UL
LT2
0.00 0.55 0.55 C LCb setrgbcolor
6315 1001 M
(Boost Binomial Queue) Rshow
LT2
0.00 0.55 0.55 C 6399 1001 M
380 0 V
854 2768 M
320 -9 V
321 -16 V
321 -1 V
321 4 V
320 0 V
321 -1 V
321 0 V
320 -1 V
321 1 V
321 1 V
321 14 V
320 60 V
321 44 V
321 34 V
320 19 V
321 15 V
321 9 V
320 5 V
321 3 V
854 2768 Circle
1174 2759 Circle
1495 2743 Circle
1816 2742 Circle
2137 2746 Circle
2457 2746 Circle
2778 2745 Circle
3099 2745 Circle
3419 2744 Circle
3740 2745 Circle
4061 2746 Circle
4382 2760 Circle
4702 2820 Circle
5023 2864 Circle
5344 2898 Circle
5664 2917 Circle
5985 2932 Circle
6306 2941 Circle
6626 2946 Circle
6947 2949 Circle
6589 1001 Circle
% End plot #3
% Begin plot #4
0.700 UP
1.000 UL
LT3
0.85 0.65 0.13 C LCb setrgbcolor
6315 861 M
(Boost Fibonacci Heap) Rshow
LT3
0.85 0.65 0.13 C 6399 861 M
380 0 V
854 2449 M
320 -19 V
321 -2 V
321 -4 V
321 0 V
320 1 V
321 -2 V
321 -1 V
320 -1 V
321 1 V
321 -2 V
321 9 V
320 18 V
321 6 V
321 6 V
320 2 V
321 4 V
321 1 V
320 2 V
321 25 V
854 2449 BoxF
1174 2430 BoxF
1495 2428 BoxF
1816 2424 BoxF
2137 2424 BoxF
2457 2425 BoxF
2778 2423 BoxF
3099 2422 BoxF
3419 2421 BoxF
3740 2422 BoxF
4061 2420 BoxF
4382 2429 BoxF
4702 2447 BoxF
5023 2453 BoxF
5344 2459 BoxF
5664 2461 BoxF
5985 2465 BoxF
6306 2466 BoxF
6626 2468 BoxF
6947 2493 BoxF
6589 861 BoxF
% End plot #4
% Begin plot #5
0.700 UP
1.000 UL
LT4
0.50 0.50 0.00 C LCb setrgbcolor
6315 721 M
(Lazy Binary Queue - Vector) Rshow
LT4
0.50 0.50 0.00 C 6399 721 M
380 0 V
854 1353 M
320 -53 V
321 23 V
321 52 V
321 20 V
320 48 V
321 36 V
321 -1 V
320 -6 V
321 -5 V
321 10 V
321 251 V
320 306 V
321 114 V
321 22 V
320 27 V
321 46 V
321 9 V
320 4 V
321 -16 V
854 1353 TriU
1174 1300 TriU
1495 1323 TriU
1816 1375 TriU
2137 1395 TriU
2457 1443 TriU
2778 1479 TriU
3099 1478 TriU
3419 1472 TriU
3740 1467 TriU
4061 1477 TriU
4382 1728 TriU
4702 2034 TriU
5023 2148 TriU
5344 2170 TriU
5664 2197 TriU
5985 2243 TriU
6306 2252 TriU
6626 2256 TriU
6947 2240 TriU
6589 721 TriU
% End plot #5
% Begin plot #6
0.700 UP
1.000 UL
LT5
0.54 0.17 0.89 C LCb setrgbcolor
6315 581 M
(Lazy Binary Queue - List) Rshow
LT5
0.54 0.17 0.89 C 6399 581 M
380 0 V
854 2654 M
320 -32 V
321 26 V
321 9 V
321 -2 V
320 -5 V
321 11 V
321 102 V
320 241 V
321 164 V
321 53 V
321 14 V
320 3 V
321 3 V
321 0 V
320 -9 V
321 3 V
321 -6 V
320 12 V
321 -9 V
854 2654 TriU
1174 2622 TriU
1495 2648 TriU
1816 2657 TriU
2137 2655 TriU
2457 2650 TriU
2778 2661 TriU
3099 2763 TriU
3419 3004 TriU
3740 3168 TriU
4061 3221 TriU
4382 3235 TriU
4702 3238 TriU
5023 3241 TriU
5344 3241 TriU
5664 3232 TriU
5985 3235 TriU
6306 3229 TriU
6626 3241 TriU
6947 3232 TriU
6589 581 TriU
% End plot #6
1.000 UL
LTb
LCb setrgbcolor
854 4871 N
854 448 L
6093 0 V
0 4423 V
-6093 0 V
Z stroke
0.700 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
