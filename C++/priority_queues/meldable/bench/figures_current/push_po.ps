%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./figures/push_po.ps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Sun Jun  8 19:35:32 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./figures/push_po.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (kasper)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun  8 19:35:32 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
854 448 M
63 0 V
6030 0 R
-63 0 V
770 448 M
( 0.001) Rshow
1.000 UL
LTb
LCb setrgbcolor
854 892 M
31 0 V
6062 0 R
-31 0 V
854 1151 M
31 0 V
6062 0 R
-31 0 V
854 1336 M
31 0 V
6062 0 R
-31 0 V
854 1479 M
31 0 V
6062 0 R
-31 0 V
854 1595 M
31 0 V
6062 0 R
-31 0 V
854 1694 M
31 0 V
6062 0 R
-31 0 V
854 1779 M
31 0 V
6062 0 R
-31 0 V
854 1855 M
31 0 V
6062 0 R
-31 0 V
854 1922 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.01) Rshow
1.000 UL
LTb
LCb setrgbcolor
854 2366 M
31 0 V
6062 0 R
-31 0 V
854 2626 M
31 0 V
6062 0 R
-31 0 V
854 2810 M
31 0 V
6062 0 R
-31 0 V
854 2953 M
31 0 V
6062 0 R
-31 0 V
854 3070 M
31 0 V
6062 0 R
-31 0 V
854 3168 M
31 0 V
6062 0 R
-31 0 V
854 3254 M
31 0 V
6062 0 R
-31 0 V
854 3329 M
31 0 V
6062 0 R
-31 0 V
854 3397 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 0.1) Rshow
1.000 UL
LTb
LCb setrgbcolor
854 3840 M
31 0 V
6062 0 R
-31 0 V
854 4100 M
31 0 V
6062 0 R
-31 0 V
854 4284 M
31 0 V
6062 0 R
-31 0 V
854 4427 M
31 0 V
6062 0 R
-31 0 V
854 4544 M
31 0 V
6062 0 R
-31 0 V
854 4643 M
31 0 V
6062 0 R
-31 0 V
854 4728 M
31 0 V
6062 0 R
-31 0 V
854 4804 M
31 0 V
6062 0 R
-31 0 V
854 4871 M
63 0 V
6030 0 R
-63 0 V
-6114 0 R
( 1) Rshow
1.000 UL
LTb
LCb setrgbcolor
854 448 M
0 63 V
0 4360 R
0 -63 V
854 308 M
( 1000) Cshow
1.000 UL
LTb
LCb setrgbcolor
1313 448 M
0 31 V
0 4392 R
0 -31 V
1919 448 M
0 31 V
0 4392 R
0 -31 V
2230 448 M
0 31 V
0 4392 R
0 -31 V
2377 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 10000) Cshow
1.000 UL
LTb
LCb setrgbcolor
2836 448 M
0 31 V
0 4392 R
0 -31 V
3442 448 M
0 31 V
0 4392 R
0 -31 V
3753 448 M
0 31 V
0 4392 R
0 -31 V
3901 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 100000) Cshow
1.000 UL
LTb
LCb setrgbcolor
4359 448 M
0 31 V
0 4392 R
0 -31 V
4965 448 M
0 31 V
0 4392 R
0 -31 V
5276 448 M
0 31 V
0 4392 R
0 -31 V
5424 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
5882 448 M
0 31 V
0 4392 R
0 -31 V
6488 448 M
0 31 V
0 4392 R
0 -31 V
6799 448 M
0 31 V
0 4392 R
0 -31 V
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
( 1e+07) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
854 4871 N
854 448 L
6093 0 V
0 4423 V
-6093 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(time in micro-seconds per. element\( log-scale \)) Cshow
grestore
LTb
LCb setrgbcolor
3900 98 M
(number of elements\( log-scale \)) Cshow
LTb
0.700 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
0.700 UP
1.000 UL
LT0
0.00 0.50 0.00 C LCb setrgbcolor
6315 1281 M
(Regular Binary Queue) Rshow
LT0
0.00 0.50 0.00 C 6399 1281 M
380 0 V
854 4287 M
268 -92 V
268 -66 V
269 -117 V
268 -118 V
268 -120 V
268 -131 V
269 -127 V
268 -133 V
268 -33 V
268 19 V
268 70 V
269 65 V
268 35 V
268 35 V
268 10 V
269 9 V
268 69 V
268 -46 V
268 6 V
268 2 V
269 102 V
268 -18 V
854 4287 Box
1122 4195 Box
1390 4129 Box
1659 4012 Box
1927 3894 Box
2195 3774 Box
2463 3643 Box
2732 3516 Box
3000 3383 Box
3268 3350 Box
3536 3369 Box
3804 3439 Box
4073 3504 Box
4341 3539 Box
4609 3574 Box
4877 3584 Box
5146 3593 Box
5414 3662 Box
5682 3616 Box
5950 3622 Box
6218 3624 Box
6487 3726 Box
6755 3708 Box
6589 1281 Box
% End plot #1
% Begin plot #2
0.700 UP
1.000 UL
LT1
0.86 0.08 0.24 C LCb setrgbcolor
6315 1141 M
(Magic Binary Queue) Rshow
LT1
0.86 0.08 0.24 C 6399 1141 M
380 0 V
854 3766 M
268 -74 V
268 -55 V
269 -119 V
268 -112 V
268 -121 V
268 -116 V
269 -133 V
268 -135 V
268 -31 V
268 60 V
268 247 V
269 150 V
268 92 V
268 34 V
268 25 V
269 -1 V
268 9 V
268 19 V
268 5 V
268 2 V
269 79 V
268 -20 V
854 3766 TriUF
1122 3692 TriUF
1390 3637 TriUF
1659 3518 TriUF
1927 3406 TriUF
2195 3285 TriUF
2463 3169 TriUF
2732 3036 TriUF
3000 2901 TriUF
3268 2870 TriUF
3536 2930 TriUF
3804 3177 TriUF
4073 3327 TriUF
4341 3419 TriUF
4609 3453 TriUF
4877 3478 TriUF
5146 3477 TriUF
5414 3486 TriUF
5682 3505 TriUF
5950 3510 TriUF
6218 3512 TriUF
6487 3591 TriUF
6755 3571 TriUF
6589 1141 TriUF
% End plot #2
% Begin plot #3
0.700 UP
1.000 UL
LT2
0.54 0.17 0.89 C LCb setrgbcolor
6315 1001 M
(Eager Binary Queue) Rshow
LT2
0.54 0.17 0.89 C 6399 1001 M
380 0 V
854 3703 M
268 -3 V
268 -27 V
269 -109 V
268 -134 V
268 -106 V
268 -128 V
269 -145 V
268 -130 V
268 -94 V
268 56 V
268 205 V
269 110 V
268 49 V
268 24 V
268 13 V
269 -20 V
268 28 V
268 -4 V
268 23 V
268 2 V
269 15 V
268 41 V
854 3703 CircleF
1122 3700 CircleF
1390 3673 CircleF
1659 3564 CircleF
1927 3430 CircleF
2195 3324 CircleF
2463 3196 CircleF
2732 3051 CircleF
3000 2921 CircleF
3268 2827 CircleF
3536 2883 CircleF
3804 3088 CircleF
4073 3198 CircleF
4341 3247 CircleF
4609 3271 CircleF
4877 3284 CircleF
5146 3264 CircleF
5414 3292 CircleF
5682 3288 CircleF
5950 3311 CircleF
6218 3313 CircleF
6487 3328 CircleF
6755 3369 CircleF
6589 1001 CircleF
% End plot #3
% Begin plot #4
0.700 UP
1.000 UL
LT3
0.00 0.55 0.55 C LCb setrgbcolor
6315 861 M
(Boost Binomial Queue) Rshow
LT3
0.00 0.55 0.55 C 6399 861 M
380 0 V
854 2826 M
268 -29 V
268 -12 V
269 7 V
268 1 V
268 0 V
268 -2 V
269 0 V
268 -1 V
268 2 V
268 16 V
268 60 V
269 35 V
268 24 V
268 17 V
268 10 V
269 2 V
268 1 V
268 7 V
268 -5 V
268 -16 V
269 -12 V
268 -18 V
854 2826 Circle
1122 2797 Circle
1390 2785 Circle
1659 2792 Circle
1927 2793 Circle
2195 2793 Circle
2463 2791 Circle
2732 2791 Circle
3000 2790 Circle
3268 2792 Circle
3536 2808 Circle
3804 2868 Circle
4073 2903 Circle
4341 2927 Circle
4609 2944 Circle
4877 2954 Circle
5146 2956 Circle
5414 2957 Circle
5682 2964 Circle
5950 2959 Circle
6218 2943 Circle
6487 2931 Circle
6755 2913 Circle
6589 861 Circle
% End plot #4
% Begin plot #5
0.700 UP
1.000 UL
LT4
0.85 0.65 0.13 C LCb setrgbcolor
6315 721 M
(Boost Fibonacci Heap) Rshow
LT4
0.85 0.65 0.13 C 6399 721 M
380 0 V
854 2586 M
268 -151 V
268 -7 V
269 -3 V
268 2 V
268 0 V
268 -1 V
269 0 V
268 -1 V
268 1 V
268 14 V
268 11 V
269 8 V
268 5 V
268 4 V
268 11 V
269 -7 V
268 2 V
268 2 V
268 2 V
268 1 V
269 24 V
268 26 V
854 2586 BoxF
1122 2435 BoxF
1390 2428 BoxF
1659 2425 BoxF
1927 2427 BoxF
2195 2427 BoxF
2463 2426 BoxF
2732 2426 BoxF
3000 2425 BoxF
3268 2426 BoxF
3536 2440 BoxF
3804 2451 BoxF
4073 2459 BoxF
4341 2464 BoxF
4609 2468 BoxF
4877 2479 BoxF
5146 2472 BoxF
5414 2474 BoxF
5682 2476 BoxF
5950 2478 BoxF
6218 2479 BoxF
6487 2503 BoxF
6755 2529 BoxF
6589 721 BoxF
% End plot #5
% Begin plot #6
0.700 UP
1.000 UL
LT5
0.50 0.50 0.00 C LCb setrgbcolor
6315 581 M
(Lazy Binary Queue) Rshow
LT5
0.50 0.50 0.00 C 6399 581 M
380 0 V
854 2353 M
268 -88 V
268 -75 V
269 -101 V
268 -54 V
268 -141 V
268 -51 V
269 -113 V
268 -204 V
268 87 V
268 262 V
268 257 V
269 78 V
268 38 V
268 13 V
268 -14 V
269 27 V
268 -7 V
268 11 V
268 3 V
268 11 V
269 17 V
268 -10 V
854 2353 TriU
1122 2265 TriU
1390 2190 TriU
1659 2089 TriU
1927 2035 TriU
2195 1894 TriU
2463 1843 TriU
2732 1730 TriU
3000 1526 TriU
3268 1613 TriU
3536 1875 TriU
3804 2132 TriU
4073 2210 TriU
4341 2248 TriU
4609 2261 TriU
4877 2247 TriU
5146 2274 TriU
5414 2267 TriU
5682 2278 TriU
5950 2281 TriU
6218 2292 TriU
6487 2309 TriU
6755 2299 TriU
6589 581 TriU
% End plot #6
1.000 UL
LTb
LCb setrgbcolor
854 4871 N
854 448 L
6093 0 V
0 4423 V
-6093 0 V
Z stroke
0.700 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
